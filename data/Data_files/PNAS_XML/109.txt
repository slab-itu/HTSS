article id="http://dx.doi.org/10.1073/pnas.1511366112"  #@NEW_LINE#@#  
title  #@NEW_LINE#@#  
Computational complexity of ecological and evolutionary spatial dynamics  #@NEW_LINE#@#  

Significance  #@NEW_LINE#@#  
An important question in evolution is: how does population structure affect the outcome of the evolutionary process?  #@NEW_LINE#@#  The theory of evolution in structured population has provided an impressive range of results, but an understanding of the computational complexity of even simple questions was missing.  #@NEW_LINE#@#  We prove that some fundamental problems in ecology and evolution can be precisely characterized by well-established computational complexity classes.  #@NEW_LINE#@#  This implies that the problems cannot be answered by simple equations.  #@NEW_LINE#@#  For example, there cannot be simple formulas for the fixation probability of a mutant given frequency-dependent selection in a structured population.  #@NEW_LINE#@#  We also show that, for example, calculating the molecular clock of neutral evolution in structured populations admit efficient algorithmic solutions.  #@NEW_LINE#@#  

Abstract  #@NEW_LINE#@#  
There are deep, yet largely unexplored, connections between computer science and biology.  #@NEW_LINE#@#  Both disciplines examine how information proliferates in time and space.  #@NEW_LINE#@#  Central results in computer science describe the complexity of algorithms that solve certain classes of problems.  #@NEW_LINE#@#  An algorithm is deemed efficient if it can solve a problem in polynomial time, which means the running time of the algorithm is a polynomial function of the length of the input.  #@NEW_LINE#@#  There are classes of harder problems for which the fastest possible algorithm requires exponential time.  #@NEW_LINE#@#  Another criterion is the space requirement of the algorithm.  #@NEW_LINE#@#  There is a crucial distinction between algorithms that can find a solution, verify a solution, or list several distinct solutions in given time and space.  #@NEW_LINE#@#  The complexity hierarchy that is generated in this way is the foundation of theoretical computer science.  #@NEW_LINE#@#  Precise complexity results can be notoriously difficult.  #@NEW_LINE#@#  The famous question whether polynomial time equals nondeterministic polynomial time (i.e., P = NP) is one of the hardest open problems in computer science and all of mathematics.  #@NEW_LINE#@#  Here, we consider simple processes of ecological and evolutionary spatial dynamics.  #@NEW_LINE#@#  The basic question is: What is the probability that a new invader (or a new mutant) will take over a resident population?  #@NEW_LINE#@#  We derive precise complexity results for a variety of scenarios.  #@NEW_LINE#@#  We therefore show that some fundamental questions in this area cannot be answered by simple equations (assuming that P is not equal to NP).  #@NEW_LINE#@#  

Complexity results for various models and computational questions  #@NEW_LINE#@#  
Pictorial illustration of the complexity classes P, NP, # P, and PSPACE.  #@NEW_LINE#@#  The complexity class P is contained in NP, NP is contained in # P, and # P is contained in PSPACE.  #@NEW_LINE#@#  The widely believed conjecture is that these complexity classes are different.  #@NEW_LINE#@#  A problem is NP-hard if it is at least as hard as each problem in NP, and the case is similar for # P-hardness and PSPACE-hardness.  #@NEW_LINE#@#  The intersection of NP and NP-hard gives the NP-complete problems, the intersection of # P and # P-hard gives the # P-complete problems, and the intersection of PSPACE and PSPACE-hard gives the PSPACE-complete problems.  #@NEW_LINE#@#  A polynomial-time solution for an NP-hard or NP-complete problem would imply P = NP.  #@NEW_LINE#@#  
Results  #@NEW_LINE#@#  
The first problem is motivated by ecological dynamics.  #@NEW_LINE#@#  There is an ecosystem occupied by resident species.  #@NEW_LINE#@#  The spatial structure of the ecosystem is given by a graph.  #@NEW_LINE#@#  An invading species is introduced (an illustration is provided in Fig 2).  #@NEW_LINE#@#  We assume the invading species has a competitive advantage in the sense that once a position is occupied by the invading species, the resident cannot get it back.  #@NEW_LINE#@#  The invading species, however, has a density constraint: If the number of invaders around a focal invader is above a threshold, h, then the invader in the focal vertex cannot colonize another vertex.  #@NEW_LINE#@#  
We are interested in the probability that the invader starting from a random initial position will take over the entire ecosystem (and therefore drive the resident to extinction).  #@NEW_LINE#@#  There are two types of questions.  #@NEW_LINE#@#  The qualitative question is whether the takeover probability is greater than 0.  #@NEW_LINE#@#  The quantitative question is concerned with computing the takeover probability subject to a small error.  #@NEW_LINE#@#  Fig 2 gives a pictorial illustration.  #@NEW_LINE#@#  We prove the following results.  #@NEW_LINE#@#  The qualitative question is NP-complete (SI Appendix, Theorem 4).  #@NEW_LINE#@#  The quantitative question is # P-complete (SI Appendix, Theorem 8).  #@NEW_LINE#@#  
The second problem is concerned with evolutionary games in structured populations.  #@NEW_LINE#@#  There are two types, A and B, whose reproductive rates depend on local interactions.  #@NEW_LINE#@#  We consider the setting of games on graphs.  #@NEW_LINE#@#  Each vertex is occupied by one individual, which is either A or B. Interactions occur pairwise with all neighbors.  #@NEW_LINE#@#  The payoff matrix is given byABAB(abcd).  #@NEW_LINE#@#  [1]The entries of the payoff matrix can be positive or negative (or 0).  #@NEW_LINE#@#  Each individual interacts with all of its neighbors on the graph to derive a payoff sum.  #@NEW_LINE#@#  The payoff sum is translated into reproductive success as follows.  #@NEW_LINE#@#  If the payoff sum is positive, then the fecundity equals the payoff sum.  #@NEW_LINE#@#  If the payoff sum is negative, then the fecundity is 0.  #@NEW_LINE#@#  We refer to this translation as linear fitness.  #@NEW_LINE#@#  In any one time step, a random individual is chosen for reproduction proportional to its fecundity.  #@NEW_LINE#@#  The offspring, which is of the same type as the parent, is placed into an adjacent position on the graph (illustrations are provided in Figs.  #@NEW_LINE#@#  3 and 4).  #@NEW_LINE#@#  
We are interested in the probability that a single A individual starting in a random position on the graph generates a lineage that will take over the entire population; this probability is generally called fixation probability.  #@NEW_LINE#@#  As before, there are two types of questions.  #@NEW_LINE#@#  The qualitative question is whether the fixation probability is positive.  #@NEW_LINE#@#  The quantitative question is concerned with computing the fixation probability subject to a small error.  #@NEW_LINE#@#  We prove the following results.  #@NEW_LINE#@#  The qualitative question is NP-hard and in PSPACE.  #@NEW_LINE#@#  The quantitative question is # P-hard and in PSPACE.  #@NEW_LINE#@#  The results follow from SI Appendix, Theorems 4, 8, and 15.  #@NEW_LINE#@#  
Note that the first problem can also be obtained as a special case of the second problem.  #@NEW_LINE#@#  In the payoff matrix (1), we can set, for example, a=1, b=1, c=d=0.  #@NEW_LINE#@#  This game has the property that type B never reproduces and type A reproduces until half of its neighbors are also of type A.  #@NEW_LINE#@#  This parameter choice leads to the same qualitative behavior and the same complexity bounds as described in the first problem.  #@NEW_LINE#@#  
A generalization of games on graphs is the setting where the interaction graph and the replacement graph are distinct (13).  #@NEW_LINE#@#  Thus, each individual interacts with all of its neighbors on the interaction graph to receive payoff.  #@NEW_LINE#@#  Subsequently, an individual is chosen for reproduction proportional to its fecundity.  #@NEW_LINE#@#  The offspring is placed randomly among all neighbors of the focal individual on the replacement graph.  #@NEW_LINE#@#  In this case, both the qualitative and quantitative questions become PSPACE-complete (SI Appendix, Theorem 15).  #@NEW_LINE#@#  
We also consider a variation of the second problem.  #@NEW_LINE#@#  In particular, we change the mapping from payoff to fecundity.  #@NEW_LINE#@#  We now assume that fecundity is an exponential function of payoff, and refer to it as exponential fitness (an illustration is provided in Fig 4).  #@NEW_LINE#@#  Therefore, the fecundity of an individual is always positive (even if its payoff sum is negative).  #@NEW_LINE#@#  In this setting, the qualitative question can be decided in polynomial time.  #@NEW_LINE#@#  The reason is that the fixation probability is positive if the graph is connected.  #@NEW_LINE#@#  Thus, to answer the qualitative question, the algorithm only needs to check whether the graph is connected; this problem is in P. However, the quantitative question has the same complexity as the previous problem (SI Appendix, Theorems 16 and 17).  #@NEW_LINE#@#  
A very special case of games on graphs is constant selection.  #@NEW_LINE#@#  Type A has constant fecundity a and type B has constant fecundity b independent of any interactions (i.e., fecundity is independent of the population structure).  #@NEW_LINE#@#  The qualitative question concerning the fixation probability of A is in P. The quantitative question is in PSPACE, but any nontrivial lower bound is an open question.  #@NEW_LINE#@#  
Finally, although we establish computational hardness for several problems, we also show that two classic problems can be solved in polynomial time (SI Appendix, section 7).  #@NEW_LINE#@#  First, we consider the molecular clock, which is the rate at which neutral mutations accumulate over time.  #@NEW_LINE#@#  The molecular clock is affected by population structure (13).  #@NEW_LINE#@#  We show that the molecular clock can be computed in polynomial time because the problem reduces to solving a set of linear equalities, which can be achieved in polynomial time using Gaussian elimination.  #@NEW_LINE#@#  Second, we consider evolutionary games in a well-mixed population structure, where the underlying structure is the complete graph (38).  #@NEW_LINE#@#  We show that the exact fixation probability can be computed in polynomial time.  #@NEW_LINE#@#  In this case, the problem can be reduced to computing absorption probabilities in Markov chains, where each state represents the number of mutants.  #@NEW_LINE#@#  Hence, the Markov chain is linear in the number of vertices of the graphs, and because absorption probabilities in Markov chains can be computed in polynomial time (by solving a set of linear equalities), we obtain the desired result.  #@NEW_LINE#@#  

Methods__Proof_Ideas  #@NEW_LINE#@#  
We now present the key intuition and main ideas of our results.  #@NEW_LINE#@#  The most interesting and technically insightful results are the lower bounds (i.e., the hardness proofs), and we present the key ideas only for them.  #@NEW_LINE#@#  
NP-Hardness_of_the_Qualitative_Ecological_Problem  #@NEW_LINE#@#  
One of the most classic NP-complete problems is the 3SAT-problem, which is the SAT problem where every clause has exactly three literals (a literal is a Boolean variable x or a negation of a variable x¯).  #@NEW_LINE#@#  Given instances of the 3SAT problem, we construct instances of the ecological problem where we have a start vertex, where the mutant arises, followed by a sequence of vertices (i.e., each vertex can reproduce a mutant to the next), one for each clause.  #@NEW_LINE#@#  By means of our construction, a vertex in this sequence can reproduce, at most, three times, one of which must be the next vertex of the sequence, with the others corresponding to, at most, two literals of the clause (intuitively, these two literals represent the ones that are not set to true by a candidate-satisfying assignment).  #@NEW_LINE#@#  The last vertex of the sequence reproduces to a new sequence of vertices that corresponds to an assignment of truth values to the variables.  #@NEW_LINE#@#  Each vertex in this new sequence can reproduce twice, one to the next vertex of the sequence and other to a variable or its negation.  #@NEW_LINE#@#  The variables or the corresponding negation can then reproduce mutants to the corresponding literals of the clauses.  #@NEW_LINE#@#  After this sequence, all vertices that do not correspond to a literal in a clause become mutants.  #@NEW_LINE#@#  In essence, our construction ensures that if there is a satisfying assignment, then with positive probability, all vertices can become mutants, and, conversely, if there is no satisfying assignment, then the probability that all vertices become mutants is 0.  #@NEW_LINE#@#  

#_P-Hardness_of_the_Quantitative_Ecological_Problem  #@NEW_LINE#@#  
A # P-complete problem is counting the number of perfect matchings in a bipartite graph (which also corresponds to computing the permanent of a Boolean matrix).  #@NEW_LINE#@#  A bipartite graph consists of two set of vertices, a set on the left side and a set on the right side, with edges from the left side to the right side.  #@NEW_LINE#@#  A perfect matching is a one-to-one mapping of each vertex of the left side to a vertex on the right side such that there is an edge between them.  #@NEW_LINE#@#  First, we argue that for the hardness proof, it suffices to consider bipartite graphs in which each vertex on the left side has an out-degree of 2k for some integer k. A key idea in our construction is that in a full binary tree, if the root becomes a mutant and every vertex can reproduce exactly once, then the set of mutants will eventually consist of a path from the root to a leaf, chosen uniformly at random.  #@NEW_LINE#@#  Our construction is then as follows: We have a start vertex where the mutant arises, which reproduces to turn each of the vertices on the left side of the bipartite graph to mutants.  #@NEW_LINE#@#  Each of the vertices on the left side is the root of a full binary tree, where the leaves correspond to the right side of the bipartite graph.  #@NEW_LINE#@#  We show that the fixation process corresponds to a perfect matching (defined from the path in the full binary trees), and given an approximation of the fixation probability, the exact number of perfect matchings of the bipartite graph can be computed.  #@NEW_LINE#@#  

PSPACE-Hardness_for_the_Game_on_Evolutionary_Graph_Problem  #@NEW_LINE#@#  
Our PSPACE-hardness proof shows that the evolutionary process can solve the following concurrent-if problem, which we show is PSPACE-hard.  #@NEW_LINE#@#  The concurrent-if problem consists of a set of Boolean variables x1,x2,,xn, with a given initial truth assignment to the variables, and a set of if-statements.  #@NEW_LINE#@#  Each if-statement si is of the following form: If a conjunctive clause Ci over the variables is true, then assign a truth value to a variable [e.g., if (x2x4x¯5), then x3 is assigned false].  #@NEW_LINE#@#  The problem is to decide whether the first variable (which is the accepting variable) eventually becomes true.  #@NEW_LINE#@#  We show that each variable can be represented as four vertices, and each if-statement as a single vertex, in the evolutionary graph, and the evolutionary process can mimic the execution of the concurrent-if problem.  #@NEW_LINE#@#  Finally, if the accepting variable becomes true, then it corresponds to making a special vertex in the evolutionary graph as a mutant.  #@NEW_LINE#@#  There exists a part of the evolutionary graph that can only become mutants after the special vertex has become a mutant.  #@NEW_LINE#@#  Using this construction, we show that both the qualitative and quantitative problems are PSPACE-hard for evolutionary games on graphs.  #@NEW_LINE#@#  


Discussion  #@NEW_LINE#@#  
In summary, we have established computational complexity results for some fundamental problems of ecological and evolutionary dynamics in structured populations.  #@NEW_LINE#@#  Our main results are summarized in Table 1.  #@NEW_LINE#@#  We now discuss the significance of our findings.  #@NEW_LINE#@#  
Interdisciplinary_Connection  #@NEW_LINE#@#  
Although both computer science and biology examine the proliferation of information in time and space, the deep connection between them has been largely unexplored.  #@NEW_LINE#@#  Our work provides precise computational complexity results for several well-studied problems in biology and can be viewed as a step to establish a connection between the two disciplines.  #@NEW_LINE#@#  

Well-Studied_Open_Problem  #@NEW_LINE#@#  
The problems we have considered are basic aspects of well-studied questions for ecological and evolutionary dynamics in structured populations (7, 28, 37, 42, 50, 51).  #@NEW_LINE#@#  Several reviews have been written on this topic (8, 11, 43, 57).  #@NEW_LINE#@#  We first discuss the significance of an algorithmic approach in evolutionary graph theory.  #@NEW_LINE#@#  An efficient algorithm, which considers all (even worst-case) graphs for evolutionary processes, is important for the following reasons.  #@NEW_LINE#@#  
First, it has been shown that some population structures (called amplifiers) can increase the effect of natural selection (7, 51), but amplifiers are rare and constructing them is difficult (7, 11, 50, 51, 58, 59).  #@NEW_LINE#@#  If there were an efficient algorithmic approach that worked for all graphs, then one could design candidates for amplifiers and efficiently check their fixation probabilities.  #@NEW_LINE#@#  Because there exists no algorithmic approach, research has to focus on special classes of graphs to identify simple formulas, such as calculating the fixation probabilities on star-like graphs (58).  #@NEW_LINE#@#  
Second, it is known that some population structures and evolutionary dynamics promote evolution of cooperation but that others do not (51).  #@NEW_LINE#@#  An important open problem is to characterize the set of graphs that promote cooperation.  #@NEW_LINE#@#  An efficient algorithmic approach would be useful to check candidate structures.  #@NEW_LINE#@#  Because no efficient algorithm exists, one has to study special cases, for example, by considering nearly regular graphs (51).  #@NEW_LINE#@#  
Thus, a general algorithmic approach is a very important problem for the well-studied question concerning the effect of population structures on evolutionary dynamics.  #@NEW_LINE#@#  An algorithmic approach has been studied for important special cases, such as for complete graphs (60), and NP-hardness was stated for the quantitative problem (7).  #@NEW_LINE#@#  The review by Shakarian et al.  #@NEW_LINE#@#  (57) identifies the complexity of computing fixation probabilities on evolutionary graphs as an important open question in the area.  #@NEW_LINE#@#  In that review, two open problems (2.1 and 2.2) are identified that ask for the complexity of computing the exact fixation probabilities for graphs and for games on graphs.  #@NEW_LINE#@#  Our results not only present answers to those crucial questions but also show that both the approximation problem and the qualitative question are computationally hard.  #@NEW_LINE#@#  The most interesting aspects of our results are the lower bounds, which show that there exists no efficient algorithm in most cases, under the widely believed conjecture that P is different from NP.  #@NEW_LINE#@#  A simple equation-based solution would give an efficient algorithm; thus, our result formally shows that for evaluating the fixation probability in spatial settings, there does not exist a simple equation-based solution in general.  #@NEW_LINE#@#  Our results are significant for the following reasons: (i) They establish the computational complexity for fundamental problems of ecological and evolutionary dynamics in structured populations (e.g., considered in 7, 8, 11, 28, 37, 42, 43, 50, 51, 57), and (ii) they significantly improve the complexity result of Lieberman et al.  #@NEW_LINE#@#  (7) and solve the computational complexity questions of the area as identified in the review by Shakarian et al.  #@NEW_LINE#@#  (57).  #@NEW_LINE#@#  

Methodological_Insight  #@NEW_LINE#@#  
Our proof ideas also reveal some important points.  #@NEW_LINE#@#  We show how evolutionary processes in structured populations can mimic aspects of computation.  #@NEW_LINE#@#  This insight could be useful for future research on understanding the computational complexities of other stochastic processes on population structures.  #@NEW_LINE#@#  


Footnotes  #@NEW_LINE#@#  


