article id="http://dx.doi.org/10.1073/pnas.1619104114"  #@NEW_LINE#@#  
title  #@NEW_LINE#@#  
Single-pixel interior filling function approach for detecting and correcting errors in particle tracking  #@NEW_LINE#@#  

Significance  #@NEW_LINE#@#  
Researchers in many areas of science and engineering gather imaging data consisting of a set of pixel intensities.  #@NEW_LINE#@#  Quantitative analyses of such data often rely on estimating the positions of objects (e.g., single-particle tracking), and many of the algorithms used promise subpixel precision and accuracy.  #@NEW_LINE#@#  Here, we introduce a method that can reveal biases in such tracking algorithms and correct the associated errors.  #@NEW_LINE#@#  An advantage of the method is that it uses only the output of the tracking algorithm without needing knowledge of how it works.  #@NEW_LINE#@#  We illustrate how the method can solve common problems in single-particle tracking.  #@NEW_LINE#@#  Under some circumstances the method can even outperform the precision limit to which most algorithms are compared.  #@NEW_LINE#@#  

Abstract  #@NEW_LINE#@#  
We present a general method for detecting and correcting biases in the outputs of particle-tracking experiments.  #@NEW_LINE#@#  Our approach is based on the histogram of estimated positions within pixels, which we term the single-pixel interior filling function (SPIFF).  #@NEW_LINE#@#  We use the deviation of the SPIFF from a uniform distribution to test the veracity of tracking analyses from different algorithms.  #@NEW_LINE#@#  Unbiased SPIFFs correspond to uniform pixel filling, whereas biased ones exhibit pixel locking, in which the estimated particle positions concentrate toward the centers of pixels.  #@NEW_LINE#@#  Although pixel locking is a well-known phenomenon, we go beyond existing methods to show how the SPIFF can be used to correct errors.  #@NEW_LINE#@#  The key is that the SPIFF aggregates statistical information from many single-particle images and localizations that are gathered over time or across an ensemble, and this information augments the single-particle data.  #@NEW_LINE#@#  We explicitly consider two cases that give rise to significant errors in estimated particle locations: undersampling the point spread function due to small emitter size and intensity overlap of proximal objects.  #@NEW_LINE#@#  In these situations, we show how errors in positions can be corrected essentially completely with little added computational cost.  #@NEW_LINE#@#  Additional situations and applications to experimental data are explored in SI Appendix.  #@NEW_LINE#@#  In the presence of experimental-like shot noise, the precision of the SPIFF-based correction achieves (and can even exceed) the unbiased CramérRao lower bound.  #@NEW_LINE#@#  We expect the SPIFF approach to be useful in a wide range of localization applications, including single-molecule imaging and particle tracking, in fields ranging from biology to materials science to astronomy.  #@NEW_LINE#@#  

Schematic representation of the tracking process and its relation to the SPIFF.  #@NEW_LINE#@#  (A) The distribution of intensities in pixels of the detector forms an image of each particle.  #@NEW_LINE#@#  (B) A tracking algorithm transforms the distribution of intensities into estimated particle positions with subpixel resolution.  #@NEW_LINE#@#  The estimated positions can differ from the true positions.  #@NEW_LINE#@#  (C) We construct a histogram of positions within pixels, the SPIFF.  #@NEW_LINE#@#  The SPIFF aggregates statistical information from many particle localizations.  #@NEW_LINE#@#  (D) The SPIFF of the true positions is uniform, whereas that of a biased algorithm is nonuniform (Eq.  #@NEW_LINE#@#  2).  #@NEW_LINE#@#  The region of all of the true positions, A, is transformed into the region g(A) of estimated positions.  #@NEW_LINE#@#  (E) Correction of the bias detected by discovery of a nonuniform SPIFF profile obtained from experiment.  #@NEW_LINE#@#  Integration of the SPIFF (red line) is used to determine the inverse function g1 (i.e., calculating the area under the SPIFF, represented by the blue region), which is used to transform the estimated positions to true positions by rescaling of the SPIFF to have a uniform distribution over the entire pixel.  #@NEW_LINE#@#  
Axioms_and_the_SPIFF  #@NEW_LINE#@#  
The combination of an imaging experiment and tracking algorithm can be viewed as a mapping of the true particle position, XT (in Cartesian coordinates due to the pixel grid), to an estimated particle position, XE: g(XT)XE.  #@NEW_LINE#@#  The mapping generates an estimate of the true position but with unknown accuracy.  #@NEW_LINE#@#  To reconstruct the true position without loss of information, g must be injective, that is, a function that preserves distinctness of elements in its domain.  #@NEW_LINE#@#  Because ideally XE=XT, g should be the identity function.  #@NEW_LINE#@#  In practice, algorithms in current use exhibit systematic errors, and g deviates significantly from the identity function in those cases.  #@NEW_LINE#@#  Moreover, because XT varies continuously, the identity property of an unbiased algorithm means that g is also differentiable.  #@NEW_LINE#@#  Differentiability, in turn, implies that connected regions are mapped to connected regions, even if the mapping is not one-to-one (Fig 1D).  #@NEW_LINE#@#  XT can be described as a random variable, and the probability for XT to attain a value in some region A is transformed to the probability for XE to attain a value in the region g(A).  #@NEW_LINE#@#  The conservation of probability enables us to write our first axiom:  #@NEW_LINE#@#  
Axiom_I  #@NEW_LINE#@#  
For any unbiased tracking algorithm g, the probability that the true position XT has a value in some region A is equal to the probability that the estimated position XE has a value in the region g(A).  #@NEW_LINE#@#  
In the absence of feedback between the pixel grid of the detector and the system being imaged, we have a second axiom:  #@NEW_LINE#@#  

Axiom_II  #@NEW_LINE#@#  
For any unbiased algorithm g, the probability for XE to obtain a particular value is independent of the specific coordinates of the pixel grid.  #@NEW_LINE#@#  This assumes that there is no aberration (over the field of view) that causes bias in the detected intensities themselves.  #@NEW_LINE#@#  
We now combine these axioms to define an essential condition for XE to represent the tracking results of an unbiased algorithm.  #@NEW_LINE#@#  Let {XE(i)} be a series of estimated positions of {XT(i)}.  #@NEW_LINE#@#  This series includes time traces that are produced by the tracking algorithm g for different particles.  #@NEW_LINE#@#  Each XT(i) can be written as XT(i)=X^T(i)+a(i), where a(i) is the coordinate of the center of the pixel corresponding to XT(i) and X^T(i) is the subpixel position; X^T(i) is mapped by the algorithm g to g(XT(i))a(i)=XE(i)a(i)=X^E(i).  #@NEW_LINE#@#  Using axiom I we write the conservation of probability (in one dimension for simplicity) asPT(X^T(i))dX^T(i)=PE(X^E(i))dX^E(i),[1]where P is the SPIFF density function and dX is the differential of X. Subscripts E and T refer to the SPIFF obtained for the estimated and true positions.  #@NEW_LINE#@#  By axiom II, the SPIFF, PT, is uniform, that is, PT(X^T(i))=1 X^T(i).  #@NEW_LINE#@#  From Eq.  #@NEW_LINE#@#  1 it then follows thatPE(X^E(i))=|dg1(X^E(i))dX^E(i)|,[2]where g1 is the inverse function of g. The term on the right-hand side of Eq.  #@NEW_LINE#@#  2 is the Jacobian of the inverse function g1.  #@NEW_LINE#@#  It assumes that g acts identically in each pixel.  #@NEW_LINE#@#  For an unbiased tracking algorithm, g is the identity function and thus an essential condition for any tracked data to accurately represent the true positions isPE(X^E(i))=1.  #@NEW_LINE#@#  [3]  #@NEW_LINE#@#  
The SPIFF is obtained from tracked data by building a histogram of the shifted positions X^E(i) (Fig 1).  #@NEW_LINE#@#  Eq.  #@NEW_LINE#@#  3 then tells us that deviations of the SPIFF (histogram) from a constant value (i.e., uniform filling) indicate the presence of bias in the tracking algorithm and inaccuracy of the derived coordinates.  #@NEW_LINE#@#  This indicator is independent of the specific tracking algorithm used and can be applied to any kind of tracked data given a sufficient number of sampled positions (SI Appendix, section II).  #@NEW_LINE#@#  Although one can theoretically study the performance of a specific algorithm with simulated PSFs, the exact experimental conditions are never known completely and thus may not be well represented.  #@NEW_LINE#@#  The SPIFF provides an essential validation test and indicates whether an algorithm produces biased results.  #@NEW_LINE#@#  Fig 1D shows a hypothetical case when inaccuracies in g are manifest as failure of the tracked positions to fill the pixels.  #@NEW_LINE#@#  
Fig 2 shows an example of the SPIFF for particle positions that are obtained from the CrockerGrier center-of-mass algorithm (4) applied to experimental data.  #@NEW_LINE#@#  The experimental system consists of a moderately dense quasi-2D aqueous suspension of colloid particles (diameter 1.57 ± 0.02 m) (27).  #@NEW_LINE#@#  A digital camera was used to record the particle motions with temporal resolution of 200 frames per second.  #@NEW_LINE#@#  The image analysis was performed using a Python implementation of the CrockerGrier method (4).  #@NEW_LINE#@#  We see that the tracked positions cluster toward the centers of the pixels.  #@NEW_LINE#@#  This deviation from a uniform distribution can be caused by various factors, including intensity overlaps of nearby particles and background noise.  #@NEW_LINE#@#  Regardless of the cause, the SPIFF shows that the subpixel positions are biased.  #@NEW_LINE#@#  This inaccuracy is important and different from the precision of the algorithm.  #@NEW_LINE#@#  Loss of precision usually arises from randomly distributed errors, whereas inaccuracy can arise from correlations.  #@NEW_LINE#@#  In SI Appendix, section I we show how the inaccuracy displayed in Fig 2 introduces artificial memory to colloidal dynamics on short time scales (0.1 s, less than the time between collisions).  #@NEW_LINE#@#  


Using_the_SPIFF_to_Correct_Bias_in_Tracked_Positions  #@NEW_LINE#@#  
The errors discussed above can be removed by inverting the mapping associated with the tracking algorithm: XT=g1(XE).  #@NEW_LINE#@#  The explicit form of g1 is easily found noting that the Jacobian of g1 is simply the SPIFF itself.  #@NEW_LINE#@#  In 1D it is a matter of integration of PE in Eq.  #@NEW_LINE#@#  2 to obtain g1, under the condition that g1 is monotonic.  #@NEW_LINE#@#  In higher dimensions this task is also possible under certain constraints.  #@NEW_LINE#@#  In 1D the mapping g1 is from a scalar to a scalar, whereas in higher dimensions it maps a vector to a vector.  #@NEW_LINE#@#  Knowledge of the Jacobian of the transformation provides us with a scalar quantity, which is generally insufficient to reconstruct the vector mapping.  #@NEW_LINE#@#  However, when the mapping has a specific symmetry (or is bounded by constraints), we can simplify the integration of PE.  #@NEW_LINE#@#  In SI Appendix, section III we show how to obtain g1 for several cases.  #@NEW_LINE#@#  In the following we assume PE is factorizablethat is, PE(x,y)=PE(x)PE(y); in this case, the Jacobian in Eq.  #@NEW_LINE#@#  2 is also factorizable, and we integrate over the dimensions independently (SI Appendix, section III).  #@NEW_LINE#@#  This process is indicated schematically in Fig 1D.  #@NEW_LINE#@#  Inverting the mapping is always possible if g is injective, for example when a tracking algorithm has only systematic bias.  #@NEW_LINE#@#  However, when the bias is not systematic, noise can distort the SPIFF to an extent that there is a loss of information, and there is no longer a one-to-one relation between XE and XT.  #@NEW_LINE#@#  
In the following two subsections, we use simulated data to illustrate two common situations (undersampling and overlapping PSFs) that give rise to artifacts in particle tracking and show how the SPIFF can be used to correct them.  #@NEW_LINE#@#  We consider a third situation (background noise) in SI Appendix, section IV.  #@NEW_LINE#@#  In the examples we use the CrockerGrier method (4) as the tracking algorithm, and a Gaussian for the PSF, but our findings apply to any tracking output without needing knowledge of the algorithm.  #@NEW_LINE#@#  
NyquistShannon_Bias  #@NEW_LINE#@#  
In signal processing the NyquistShannon sampling theorem states that a band-limited function can be perfectly reconstructed from a series of samples if the bandwidth B is less than or equal to half the sampling rate (28).  #@NEW_LINE#@#  A similar restriction applies for correct determination of the location of the center of a (point) light source (15).  #@NEW_LINE#@#  The intensity of the point source must span a sufficient number of pixels to properly reconstruct the position of the center.  #@NEW_LINE#@#  If the CrockerGrier method (4) is used, undersampling leads to systematic errors in the tracking algorithm (16, 17).  #@NEW_LINE#@#  These errors can be detected and corrected for sufficiently large signal-to-noise using the SPIFF.  #@NEW_LINE#@#  
To demonstrate the NyquistShannon bias, we generate 106 random positions XT=(xc,yc) and for each position generate pixel intensities that correspond to a Gaussian PSF with SD :Ik,m=14[erf(k+12xc2)erf(k12xc2)][erf(m+12yc2)erf(m12yc2)].  #@NEW_LINE#@#  [4]To model undersampling we used =0.25 pixels, such that the intensity is mainly concentrated in one pixel (Fig 3A).  #@NEW_LINE#@#  
The center-of-mass algorithm for determining the position of the center of a (point) light source is a simple averaging procedure.  #@NEW_LINE#@#  Let Ik,m be the recorded intensity in pixel (k,m), and choose the coordinate system such that the maximum intensity of the light source (in the absence of other nearby emitters) is at pixel (0, 0).  #@NEW_LINE#@#  Here, the size of a pixel is taken to be 1 and the pixel centers have integer locations.  #@NEW_LINE#@#  The position of the center of the light source (x,y) is then estimated to be (4)(x,y)=k=wk=wm=wm=w(k,m)Ik,mk=wk=wm=wm=w(k,m),[5]where the size of the region (in pixels2) that is used to determine the position of the particle is (2w+1)×(2w+1).  #@NEW_LINE#@#  We use w = 10.  #@NEW_LINE#@#  
The factorizability of Ik,m and the form of Eq.  #@NEW_LINE#@#  5 allow treating the x and y directions separately.  #@NEW_LINE#@#  A transformation XEX^ is performed and the SPIFF is plotted in Fig 3B.  #@NEW_LINE#@#  Owing to the symmetry of the problem and the factorizability of the PSF, we present our analysis in terms of only the x direction; statistically identical results hold for the y direction.  #@NEW_LINE#@#  Fig 3B shows a large deviation from the uniform distribution, indicating bias in the tracking; the X^E(i) are systematically shifted toward the center of the pixel.  #@NEW_LINE#@#  This arises because discrete pixels effectively average the PSF within their interiors, so that undersampling results in a loss of information about the PSF.  #@NEW_LINE#@#  Because we generated the simulated data, we can determine the actual errors made in the detection of particle positions.  #@NEW_LINE#@#  The distribution of errors is bimodal with peaks at ± 0.1 pixels (Fig 3D).  #@NEW_LINE#@#  
The SPIFF can be constructed without knowledge of the true particle positions and thus can easily be used to test for bias.  #@NEW_LINE#@#  Moreover, for the case of undersampling the bias is systematic and thus can be corrected.  #@NEW_LINE#@#  Due to the symmetry of the PSF and the form of Eq.  #@NEW_LINE#@#  5 the point XT=(0,0) at the center of a given pixel is a fixed point of the mapping algorithm.  #@NEW_LINE#@#  The existence of such a fixed point establishes it as a lower bound for the integration of P(X^E).  #@NEW_LINE#@#  Therefore, the true particle position is given byX^T=g1(X^E)=±0X^EP(X^E)dX^E.  #@NEW_LINE#@#  [6]The integral on the right-hand side of Eq.  #@NEW_LINE#@#  6 is the cumulative distribution; it is easily obtained from the estimated values X^E by calculating the fraction of estimated values in the range (0,X^E) relative to the total number of estimated positions.  #@NEW_LINE#@#  The minus sign in Eq.  #@NEW_LINE#@#  6 applies for the case X^Eless_than0.  #@NEW_LINE#@#  We plot the inverse transformation as obtained from sampling 106 different positions of the particle in Fig 3C.  #@NEW_LINE#@#  X^T deviates strongly from the identity function (dashed line).  #@NEW_LINE#@#  We calculate a new SPIFF for the corrected positions and find that it is uniform as desired (Fig 3B, horizontal line with black symbols).  #@NEW_LINE#@#  Correspondingly, the error distribution of the corrected positions is almost a -function at 0 (Fig 3D, black).  #@NEW_LINE#@#  The precision of the corrected positions is determined by the density of the samples and is 1 part in 103.  #@NEW_LINE#@#  These results demonstrate the benefit of the SPIFF with respect to both detecting errors and correcting them by inverting the mapping.  #@NEW_LINE#@#  The ability to correct errors arising from undersampling exists because we can compensate for the lack of information in a single frame with statistical information accumulated over time or across the ensemble.  #@NEW_LINE#@#  The SPIFF pools the information from many determinations of the PSF center, which, in turn, enables detection and correction of errors.  #@NEW_LINE#@#  

Intensity_Overlap_of_Adjacent_Objects  #@NEW_LINE#@#  
In the previous example, the bias in the tracking algorithm was systematic.  #@NEW_LINE#@#  We now show how actively generating such errors coupled with the SPIFF correction technique can help to overcome the effect of a nonsystematic bias.  #@NEW_LINE#@#  To this end, we consider pixel intensities that result from multiple emitters that are in close proximity.  #@NEW_LINE#@#  The resulting overlap of the PSFs affects the inferred locations of the particles by asymmetrically altering parts of the individual particle images.  #@NEW_LINE#@#  This form of error and means to address it have been considered previously in measurements of interactions between colloidal particles (29).  #@NEW_LINE#@#  Although no general method is likely to be able to correct this error in all situations, the approach that we discuss shows promise for certain experimental regimes.  #@NEW_LINE#@#  
To demonstrate the effect of overlap and its correction via the SPIFF, we do the following.  #@NEW_LINE#@#  We construct a pair of particles with a separation of 15.2 pixels and assign them Gaussian PSFs with =1.96 pixels (Fig 4 A and B), a separation large enough that one would not suspect that intensity overlap plays a role in the tracking process.  #@NEW_LINE#@#  For this fixed distance between the particles we generate 100 different random orientations of the pair.  #@NEW_LINE#@#  For each of these orientations, we then translate the pair relative to the pixel grid by allowing the center-of-mass to undergo Brownian motion for 100 steps with step sizes obtained from a Gaussian distribution with zero mean and SD of 0.2 pixels in x and y.  #@NEW_LINE#@#  Given the resulting simulated intensities, we track the particle positions using Eq.  #@NEW_LINE#@#  5 with w=9.  #@NEW_LINE#@#  
We plot the SPIFF for the x direction in Fig 4C.  #@NEW_LINE#@#  There is a clear preference for positions toward the edges of the pixel.  #@NEW_LINE#@#  Fig 4D shows the distribution of errors.  #@NEW_LINE#@#  Although the peak of the distribution is at zero, there is a significant probability of errors of 0.1 pixel or larger.  #@NEW_LINE#@#  In SI Appendix, section I we show that for this case the inferred dynamics is non-Brownian, in contradiction with the true simulated motion.  #@NEW_LINE#@#  The correlated interaction of the particle images in the tracked results gives a mean square displacement that varies nonlinearly with time.  #@NEW_LINE#@#  In fact, an order parameter for directional motion (30) indicates an inertial effect.  #@NEW_LINE#@#  Both effects are inconsistent with the simulated motion.  #@NEW_LINE#@#  
In the previous example, with systematic bias, we corrected the positions by transforming the SPIFF into a uniform distribution, but the nonsystematic bias that derives from overlaps prevents us from using the same procedure.  #@NEW_LINE#@#  Instead, we decrease w in the tracking algorithm and consequently decrease the effect of the intensities coming from nearby particles.  #@NEW_LINE#@#  Fig 4 E and F show the outcome of performing center-of-mass analysis with w=2 (vs. w=9 used in Fig 4 C and D; see also SI Appendix, section V).  #@NEW_LINE#@#  Fig 4E shows that the deviations from a uniform distribution are larger than the ones shown in Fig 4B, and Fig 4F shows that limiting the number of pixels included significantly broadens the error distribution and thus the probability of significant errors.  #@NEW_LINE#@#  Nevertheless, the SPIFF can now be used to invert the mapping as in the previous example.  #@NEW_LINE#@#  Upon doing so, the SPIFF becomes uniform (Fig 4G), and the errors are corrected (Fig 4H).  #@NEW_LINE#@#  
We have implemented the strategy outlined in this section for the experimental data shown in Fig 2 and SI Appendix, Figs.  #@NEW_LINE#@#  S1 and S2.  #@NEW_LINE#@#  From the images we selected colloid pairs in close proximity.  #@NEW_LINE#@#  The presence of additional nearby particles limits the window size that can be chosen for the tracking, which results in a strong systematic bias that we can correct with the SPIFF.  #@NEW_LINE#@#  The results show a significant improvement in the mean square displacement as a result of SPIFF correction.  #@NEW_LINE#@#  


Noise_and_the_CRLB  #@NEW_LINE#@#  
Although we have shown that the SPIFF enables nearly perfect reconstruction of particle positions in the absence of noise, the presence of noise limits the certainty in the particle positions.  #@NEW_LINE#@#  This limit, known as the CRLB (31), depends on the PSF and the type of noise present.  #@NEW_LINE#@#  For an unbiased estimator, the CRLB is Var(XT)1/I(XT), where I(XT) is the Fisher information.  #@NEW_LINE#@#  The unbiased CRLB is often used as the standard for evaluating particle-tracking algorithms (3236).  #@NEW_LINE#@#  In this section, we consider the effect of noise on the performance of the SPIFF in correcting errors and show that, because it is a biased estimator, it can actually achieve a precision that exceeds the standard unbiased CRLB.  #@NEW_LINE#@#  
To this end, we performed simulations like those in Using the SPIFF to Correct Bias in Tracked Positions, NyquistShannon Bias, except that now the intensity at each pixel (k,m) is drawn randomly from a Poisson distribution with a mean of NSIk,m+NB, where Ns is the total number of photons expected per particle (for the whole image), Ik,m is obtained from Eq.  #@NEW_LINE#@#  4, and NB is the average intensity of the background noise.  #@NEW_LINE#@#  We set NB to be 10 photons (per pixel), similar to other studies (34), and we study the performance of the algorithm as we vary NS from 102 to 2×104 photons (per image).  #@NEW_LINE#@#  We then estimate the particle positions by applying the CrockerGrier method with the SPIFF correction.  #@NEW_LINE#@#  The results are shown in Fig 5.  #@NEW_LINE#@#  In Fig 5A the optimal window size (SI Appendix, section VI) was used for each particle size (), and we see that the precision is close to the CRLB.  #@NEW_LINE#@#  In Fig 5B we observe the case of a minimal window size (w=1), which is relevant for Using the SPIFF to Correct Bias in Tracked Positions, Intensity Overlap of Adjacent Objects.  #@NEW_LINE#@#  We see that for some particle sizes ( values) our method achieves better precision than the unbiased CRLB.  #@NEW_LINE#@#  This is possible because the CrockerGrier algorithm is biased.  #@NEW_LINE#@#  
We now want to understand this result mathematically.  #@NEW_LINE#@#  In general, the CramérRao bound is given byVar(XT)(dg(XT)/dXT)2I(XT),[7]where I(XT) is the Fisher information as above, and g(XT) is the output of the tracking algorithm (the subpixel part of the position estimate), averaged over noise.  #@NEW_LINE#@#  In the case of an unbiased algorithm, there is a one-to-one mapping between the true positions and the output of the tracking algorithm, so the numerator on the right-hand side is 1.  #@NEW_LINE#@#  For a biased estimator, we can have |dg(XT)/dXT|1.  #@NEW_LINE#@#  Specifically, for the case of the CrockerGrier algorithm, we have seen that the algorithm systematically biases the positions toward the center of the pixel, such that |dg(XT)/dXT|1.  #@NEW_LINE#@#  By itself, this increase in precision is not useful because the accuracy is lower.  #@NEW_LINE#@#  However, when we correct the results with the SPIFF, we are able to remove the systematic error and take advantage of the decrease in variance implied by the biased CRLB.  #@NEW_LINE#@#  The SPIFF actually mitigates this decrease, but not so much as to lose the effect.  #@NEW_LINE#@#  In this way, we exceed the unbiased CRLB and thus the performance of most tracking algorithms.  #@NEW_LINE#@#  In this regard, it should be noted that maximum-likelihood methods also approach the CRLB (34), but they are computationally costly.  #@NEW_LINE#@#  Here, we achieve comparable or better results with minimal computational effortboth the CrockerGrier algorithm and the SPIFF correction are fast.  #@NEW_LINE#@#  A more extended discussion of the role of noise and the removal of its effects can be found in SI Appendix, section VII.  #@NEW_LINE#@#  

Conclusions  #@NEW_LINE#@#  
Algorithms that use information from PSFs to localize emitters with subpixel resolution now play an essential role in many different areas of science (3, 27, 30, 3740).  #@NEW_LINE#@#  Here we propose a simple validation method that only requires knowledge of the estimated particle positions.  #@NEW_LINE#@#  Our approach is based on the SPIFF.  #@NEW_LINE#@#  Because the positions of the objects being imaged are independent of the detection system, the SPIFF is a uniform distribution when the tracking algorithm is unbiased.  #@NEW_LINE#@#  The SPIFF is essentially a measure of pixel locking (24), and we show how its quantification can be used to invert the tracking algorithm mapping to correct errors.  #@NEW_LINE#@#  
Our key physical insight is that ergodicity of the physical processes being imaged allows pooling information from multiple times and/or emitters that compensates for limited sampling of the PSF over pixels (NyquistShannon bias) and/or intensities (e.g., owing to a confounding background signal or nonsystematic noise).  #@NEW_LINE#@#  This additional information allows us to introduce a unique strategy for treating errors that arise when pixel intensities derive from multiple emitters (10), which is common in dense systems (39).  #@NEW_LINE#@#  In such cases, we limit our use of image information to the pixels nearest to the peak intensities; although this introduces a systematic pixel-locking bias (error), we demonstrate how that effect can be removed by integrating the SPIFF.  #@NEW_LINE#@#  Indeed, this strategy enables us to exceed the unbiased CramérRao bound (11, 13) for a given signal-to-noise.  #@NEW_LINE#@#  The noise properties of this strategy differ fundamentally from those of the standard strategy of increasing the range of pixels included for each emitter.  #@NEW_LINE#@#  There is of course a limit to this procedureif particles are too close, their signals cannot be separated, and the correction procedure homogenizes the SPIFF but does not yield accurate positions.  #@NEW_LINE#@#  We characterize this limit as a function of the width of the PSF and the extent of the noise in SI Appendix, Figs.  #@NEW_LINE#@#  S13S15.  #@NEW_LINE#@#  
Remarkably, our procedure for detecting and correcting systematic errors requires only the tracked positions and does not require explicit knowledge of the PSF or independent knowledge of the extent to which the intensities from different emitters are overlapping.  #@NEW_LINE#@#  We have illustrated our approach with the center-of-mass method (4) owing to its popularity.  #@NEW_LINE#@#  However, our results are general and applicable to the output from all tracking algorithms, regardless of the source of the data or the mathematical operations performed.  #@NEW_LINE#@#  
The main limitations of our approach are that the particle positions must be well sampled with respect to the pixel boundaries, and the particle positions must be consistently generated from one pixel to another.  #@NEW_LINE#@#  We note that experimental realities (optical aberrations, variations in illumination and focus, etc.)  #@NEW_LINE#@#  can affect the latter.  #@NEW_LINE#@#  In our experience, proper calibration of the imaging system can mitigate these issues sufficiently to construct the SPIFF, but there are other situations that we have not explored and therefore for which we cannot guarantee the accuracy of the error correction (e.g., tracking 3D data where the focusing and relative particle positions create new challenges).  #@NEW_LINE#@#  It is also important to note that the SPIFF correction we propose does not solve all problems related to extraction of data from trajectories.  #@NEW_LINE#@#  For example, it is not designed to deal with nonsystematic errors such as those that arise from mixing of information coming from different sources.  #@NEW_LINE#@#  Nevertheless, we believe that many experiments will be in a regime that permits application of the SPIFF approach.  #@NEW_LINE#@#  

Acknowledgments  #@NEW_LINE#@#  
We thank Yael Roichman for bringing existing work on pixel locking to our attention.  #@NEW_LINE#@#  This work was supported by The University of Chicago Materials Research Science and Engineering Center [National Science Foundation (NSF) Grant DMR-1420709].  #@NEW_LINE#@#  B.L.  #@NEW_LINE#@#  acknowledges support from ChemMatCARS supported by NSF Grant CHE-1346572.  #@NEW_LINE#@#  N.F.S.  #@NEW_LINE#@#  is a Department of Defense National Security Science Engineering Faculty Fellow.  #@NEW_LINE#@#  

Footnotes  #@NEW_LINE#@#  


