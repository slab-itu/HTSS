article id="http://dx.doi.org/10.1371/journal.pcbi.1005995"  #@NEW_LINE#@#  
title  #@NEW_LINE#@#  
Bat detectiveDeep learning tools for bat acoustic signal detection  #@NEW_LINE#@#  

Abstract  #@NEW_LINE#@#  
Passive acoustic sensing has emerged as a powerful tool for quantifying anthropogenic impacts on biodiversity, especially for echolocating bat species.  #@NEW_LINE#@#  To better assess bat population trends there is a critical need for accurate, reliable, and open source tools that allow the detection and classification of bat calls in large collections of audio recordings.  #@NEW_LINE#@#  The majority of existing tools are commercial or have focused on the species classification task, neglecting the important problem of first localizing echolocation calls in audio which is particularly problematic in noisy recordings.  #@NEW_LINE#@#  We developed a convolutional neural network based open-source pipeline for detecting ultrasonic, full-spectrum, search-phase calls produced by echolocating bats.  #@NEW_LINE#@#  Our deep learning algorithms were trained on full-spectrum ultrasonic audio collected along road-transects across Europe and labelled by citizen scientists from www.batdetective.org.  #@NEW_LINE#@#  When compared to other existing algorithms and commercial systems, we show significantly higher detection performance of search-phase echolocation calls with our test sets.  #@NEW_LINE#@#  As an example application, we ran our detection pipeline on bat monitoring data collected over five years from Jersey (UK), and compared results to a widely-used commercial system.  #@NEW_LINE#@#  Our detection pipeline can be used for the automatic detection and monitoring of bat populations, and further facilitates their use as indicator species on a large scale.  #@NEW_LINE#@#  Our proposed pipeline makes only a small number of bat specific design decisions, and with appropriate training data it could be applied to detecting other species in audio.  #@NEW_LINE#@#  A crucial novelty of our work is showing that with careful, non-trivial, design and implementation considerations, state-of-the-art deep learning methods can be used for accurate and efficient monitoring in audio.  #@NEW_LINE#@#  

Author_summary  #@NEW_LINE#@#  
There is a critical need for robust and accurate tools to scale up biodiversity monitoring and to manage the impact of anthropogenic change.  #@NEW_LINE#@#  For example, the monitoring of bat species and their population dynamics can act as an important indicator of ecosystem health as they are particularly sensitive to habitat conversion and climate change.  #@NEW_LINE#@#  In this work we propose a fully automatic and efficient method for detecting bat echolocation calls in noisy audio recordings.  #@NEW_LINE#@#  We show that our approach is more accurate compared to existing algorithms and other commercial tools.  #@NEW_LINE#@#  Our method enables us to automatically estimate bat activity from multi-year, large-scale, audio monitoring programmes.  #@NEW_LINE#@#  

Citation: Mac Aodha O, Gibb R, Barlow KE, Browning E, Firman M, Freeman R, et al.  #@NEW_LINE#@#  (2018) Bat detectiveDeep learning tools for bat acoustic signal detection.  #@NEW_LINE#@#  PLoS Comput Biol 14(3):  #@NEW_LINE#@#  
           e1005995.  #@NEW_LINE#@#  

        https://doi.org/10.1371/journal.pcbi.1005995  #@NEW_LINE#@#  
Editor: Brock Fenton, University of Western Ontario, CANADA  #@NEW_LINE#@#  
Received: August 9, 2017; Accepted: January 21, 2018; Published:  March 8, 2018  #@NEW_LINE#@#  
Copyright:  Â© 2018 Mac Aodha et al.  #@NEW_LINE#@#  This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.  #@NEW_LINE#@#  
Data Availability: All training and test data, including user and expert annotations, along with the code to train and evaluate our detection algorithms are available on our GitHub page (https://github.com/macaodha/batdetect).  #@NEW_LINE#@#  
Funding: This work was supported financially through the Darwin Initiative (Awards 15003, 161333, EIDPR075), the Zooniverse, the Peoples Trust for Endangered Species, Mammals Trust UK, the Leverhulme Trust (Philip Leverhulme Prize for KEJ), NERC (NE/P016677/1), and EPSRC (EP/K015664/1 and EP/K503745/1).  #@NEW_LINE#@#  The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.  #@NEW_LINE#@#  
Competing interests:  The authors have declared that no competing interests exist.  #@NEW_LINE#@#  
Introduction  #@NEW_LINE#@#  
There is a critical need for robust and accurate tools to scale up biodiversity monitoring and to manage the impact of anthropogenic change [1, 2].  #@NEW_LINE#@#  Modern hardware for passive biodiversity sensing such as camera trapping and audio recording now enables the collection of vast quantities of data relatively inexpensively.  #@NEW_LINE#@#  In recent years, passive acoustic sensing has emerged as a powerful tool for understanding trends in biodiversity [36].  #@NEW_LINE#@#  Monitoring of bat species and their population dynamics can act as an important indicator of ecosystem health as they are particularly sensitive to habitat conversion and climate change [7].  #@NEW_LINE#@#  Close to 80% of bat species emit ultrasonic pulses, or echolocation calls, to search for prey, avoid obstacles, and to communicate [8].  #@NEW_LINE#@#  Acoustic monitoring offers a passive, non-invasive, way to collect data about echolocating bat population dynamics and the occurrence of species, and it is increasingly being used to survey and monitor bat populations [7, 9, 10].  #@NEW_LINE#@#  
Despite the obvious advantages of passive acoustics for monitoring echolocating bat populations, its widespread use has been hampered by the challenges of robust identification of acoustic signals, generation of meaningful statistical population trends from acoustic activity, and engaging a wide audience to take part in monitoring programmes [11].  #@NEW_LINE#@#  Recent developments in statistical methodologies for estimating abundance from acoustic activity [4, 12, 13], and the growth of citizen science networks for bats [9, 10] mean that efficient and robust audio signal processing tools are now a key priority.  #@NEW_LINE#@#  However, tool development is hampered by a lack of large scale species reference audio datasets, intraspecific variability of bat echolocation signals, and radically different recording devices being used to collect data [11].  #@NEW_LINE#@#  
To date, most full-spectrum acoustic identification tools for bats have focused on the problem of species classification from search-phase echolocation calls [11].  #@NEW_LINE#@#  Existing methods typically extract a set of audio features (such as call duration, mean frequency, and mean amplitude) from high quality search-phase echolocation call reference libraries to train machine learning algorithms to classify unknown calls to species [11, 1419].  #@NEW_LINE#@#  Instead of using manually defined features, another set of approaches attempt to learn representation directly from spectrograms [20, 21].  #@NEW_LINE#@#  Localising audio events in time (defined here as detection), is an important challenge in itself, and is often a necessary pre-processing step for species classification [22].  #@NEW_LINE#@#  Additionally, understanding how calls are detected is critical to quantifying any biases which may impact estimates of species abundance or occupancy [12, 23].  #@NEW_LINE#@#  For example, high levels of background noise, often found in highly disturbed anthropogenic habitats such as cities, may have a significant impact on the ability to detect signals in recordings and lead to a bias in population estimates.  #@NEW_LINE#@#  
Detecting search-phase calls by manual inspection of spectrograms tends to be subjective, highly dependent on individual experience, and its uncertainties are difficult to quantify [24].  #@NEW_LINE#@#  There are a number of automatic detection tools now available which use a variety of methods, including amplitude threshold filtering, locating areas of smooth frequency change, detection of set search criteria, or based on a cross-correlation of signal spectrograms with a reference spectrogram [see review in 11].  #@NEW_LINE#@#  While there are some studies that analyse the biases of automated detection (and classification) tools [2530], this is generally poorly quantified, and in particular, there is very little published data available on the accuracy of many existing closed source commercial systems.  #@NEW_LINE#@#  Despite this, commercial systems are commonly used in bat acoustic survey and monitoring studies, albeit often with additional manual inspection [9, 10].  #@NEW_LINE#@#  This reliance on poorly documented algorithms is scientifically undesirable, and manual detection of signals is clearly not scalable for national or regional survey and monitoring.  #@NEW_LINE#@#  In addition, there is the danger that manual detection and classification introduces a bias towards the less noisy and therefore more easily identifiable calls.  #@NEW_LINE#@#  To address these limitations, a freely available, transparent, fast, and accurate detection algorithm that can also be used alongside other classification algorithms is highly desirable.  #@NEW_LINE#@#  
Here, we develop an open source system for automatic bat search-phase echolocation call detection (i.e.  #@NEW_LINE#@#  localisation in time) in noisy, real world, recordings.  #@NEW_LINE#@#  We use the latest developments in machine learning to directly learn features from the input audio data using supervised deep convolutional neural networks (CNNs) [31].  #@NEW_LINE#@#  CNNs have been shown to be very successful for classification and detection of objects in images [32, 33].  #@NEW_LINE#@#  They have also been applied to various audio classification tasks [3436], along with human speech recognition [37, 38].  #@NEW_LINE#@#  Although CNNs are now starting to be used for bioacoustic signal detection and classification tasks in theoretical or small-scale contexts (e.g.  #@NEW_LINE#@#  bird call detection) [39], to date there have been no application of CNN-based tools for bat monitoring.  #@NEW_LINE#@#  This is mainly due to a lack of sufficiently large labelled bat audio datasets for use as training data.  #@NEW_LINE#@#  To overcome this, we use data collected and annotated by thousands of citizen scientists as part of our Indicator Bats Programme [7] and Bat Detective (www.batdetective.org).  #@NEW_LINE#@#  We validate our system on three different challenging test datasets from Europe which represent realistic use cases for bat surveys and monitoring programmes, and we present an example real-world application of our system on five years of monitoring data collected in Jersey (UK).  #@NEW_LINE#@#  

Materials_and_methods  #@NEW_LINE#@#  
Acoustic_detection_pipeline  #@NEW_LINE#@#  
We created a detection system to determine the temporal location of any search-phase bat echolocation calls present in ultrasonic audio recordings.  #@NEW_LINE#@#  Our detection pipeline consisted of four main steps (Fig 1) as follows: (1) Fast Fourier Transform AnalysisRaw audio (Fig 1A) was converted into a log magnitude spectrogram (FFT window size 2.3 milliseconds, overlap of 75%, with Hanning window), retaining the frequency bands between 5kHz and 135kHz (Fig 1B).  #@NEW_LINE#@#  Recordings with a sampling rate of 44.1kHz, time expansion factor of 10, and 2.3ms FFT window, resulted in a window size of 1,024 samples.  #@NEW_LINE#@#  We used spectrograms rather than raw audio for analysis, as it provides an efficient means of dealing with audio that has been recorded at different sampling rates.  #@NEW_LINE#@#  Provided the frequency and time bins of the spectrogram are of the same resolution, audio with different sampling rates can be input into the same network.  #@NEW_LINE#@#  (2) De-noisingWe used the de-noising method of [40] to filter out background noise by removing the mean amplitude in each frequency band (Fig 1C), as this significantly improved performance.  #@NEW_LINE#@#  (3) Convolutional Neural Network DetectionWe created a convolutional neural network (CNN) that poses search-phase bat echolocation call detection as a binary classification problem.  #@NEW_LINE#@#  Our CNNFULL consisted of three convolution and max pooling layers, followed by one fully connected layer (see Supplementary Information Methods for further details).  #@NEW_LINE#@#  We halved the size of the input spectrogram to reduce the input dimensionality to the CNN which resulted in an input array of size of 130 frequency bins by 20 time steps, corresponding to a fixed length, detection window size of 23ms.  #@NEW_LINE#@#  We applied the CNN in a sliding window fashion, to predict the presence of a search-phase bat call at every instance of time in the spectrogram (Fig 1D).  #@NEW_LINE#@#  As passive acoustic monitoring can generate large quantities of data, we required a detection algorithm that would run faster than real time.  #@NEW_LINE#@#  While CNNs produce state of the art results for many tasks, naÃ¯ve application of them for detection problems at test time can be extremely computationally inefficient [33].  #@NEW_LINE#@#  So, to increase the speed of our system we also created a second, smaller CNN which included fewer model weights that can be run in a fully convolutional manner (CNNFAST) (Supplementary Information Methods, Supplementary Information S1 Fig).  #@NEW_LINE#@#  (4) Call Detection ProbabilitiesThe probabilistic predictions produced by the sliding window detector tended to be overly smooth in time (Fig 1D).  #@NEW_LINE#@#  To localise the calls precisely, we converted the probabilistic predictions into individual detections using a non-maximum suppression to return the local maximum for each peak in the output prediction (Fig 1E).  #@NEW_LINE#@#  These local maxima corresponded to the predicted locations of the start of each search-phase bat echolocation call, with associated probabilities, and were exported as text files.  #@NEW_LINE#@#  

Acoustic_training_datasets  #@NEW_LINE#@#  
We trained our BatDetect CNNs using a subset of full-spectrum time-expanded (TE) ultrasonic acoustic data recorded between 20052011 along road-transects by citizen scientists as part of the Indicator Bats Programme (iBats) [7] (see Supplementary Information Methods for detailed data collection protocols).  #@NEW_LINE#@#  During surveys, acoustic devices (Tranquility Transect, Courtplan Design Ltd, UK) were set to record using a TE factor of 10, a sampling time of 320ms, and sensitivity set on maximum, giving a continuous sequence of snapshots, consisting of 320ms of silence (sensor listening) and 3.2s of TE audio (sensor playing back x 10).  #@NEW_LINE#@#  As sensitivity was set at maximum, and no minimum amplitude trigger mechanism was used on the recording devices, our recorded audio data contained many instances of low amplitude and faint bat calls, as well as other night-time background noises such as other biotic, abiotic, and anthropogenic sounds.  #@NEW_LINE#@#  
We generated annotations of the start time of search-phase bat echolocation calls in the acoustic recordings by uploading the acoustic data to the Zooniverse citizen science platform (www.zooniverse.org) as part of the Bat Detective project (www.batdetective.org), to enable public users to view and annotate them.  #@NEW_LINE#@#  The audio data were first split up into 3.84s long sound clips to include the 3.2s of TE audio and buffered by sensor-listening silence on either side.  #@NEW_LINE#@#  We then uploaded each sound clip as both a wav file and a magnitude spectrogram image (represented as a 512x720 resolution image) onto the Bat Detective project website.  #@NEW_LINE#@#  As the original recordings were time-expanded, therefore reducing the frequency, sounds in the files were in the audible spectrum and could be easily heard by users.  #@NEW_LINE#@#  Users were presented with a spectrogram and its corresponding audio file, and asked to annotate the presence of bat calls in each 3.84s clip (corresponding to 320ms of real-time recordings) (Supplementary Information S2 Fig).  #@NEW_LINE#@#  After an initial tutorial (S1 Video), users were instructed to draw bounding boxes around the locations of bat calls within call sequences and to annotate them as being either: (1) search-phase echolocation calls; (2) terminal feeding buzzes; or (3) social calls.  #@NEW_LINE#@#  Users were also encouraged to annotate the presence of insect vocalisations and non-biotic mechanical noises.  #@NEW_LINE#@#  
Between Oct 2012 and Sept 2016, 2,786 users (including only the number of users which had registered with the site and performed more than five annotations) listened to 127,451 unique clips and made 605,907 annotations.  #@NEW_LINE#@#  14,339 of these clips were labelled as containing a bat call, with 10,272 identified as containing search-phase echolocation calls.  #@NEW_LINE#@#  Due to the inherent difficulty of identifying bat calls and the inexperience of some of our users, we observed a large number of errors in the annotations provided.  #@NEW_LINE#@#  How to best merge different annotations for multiple users is an open research question.  #@NEW_LINE#@#  Instead, we visually inspected a subset of the annotations from our most active user and found that they produced high quality annotations.  #@NEW_LINE#@#  This top user had viewed 46,508 unique sound clips and had labelled 3,364 clips as containing bat search-phase echolocation calls (a representative sample is shown in Supplementary Information S3 Fig).  #@NEW_LINE#@#  From this we randomly selected a training set of 2,812 clips, consisting of 4,782 individual search-phase echolocation call annotations from Romania and Bulgaria, with which to train the CNNs (corresponding to data from 347 road-transect sampling events of 137 different transects collected between 2006 and 2011) (Fig 2A).  #@NEW_LINE#@#  Data were chosen from these countries as they contain the majority of the most commonly occurring bat species in Europe [41].  #@NEW_LINE#@#  This training set was used for all experiments.  #@NEW_LINE#@#  The remaining annotated clips from the same user were used to create one of our test sets, iBats Romania and Bulgaria (Fig 2A and see below).  #@NEW_LINE#@#  Occasionally, call harmonics and the associated main call were sometimes labelled with different start times in the same audio clip.  #@NEW_LINE#@#  To address this problem, we automatically merged annotations that occurred within 6 milliseconds of each other, making the assumption that they belonged to the same call.  #@NEW_LINE#@#  We measured the top users annotation accuracy on the test set from Romania and Bulgaria compared to the expert curated ground truth.  #@NEW_LINE#@#  This resulted in an average precision of 0.845 (computed from 455 out of 500 test files this user had labelled).  #@NEW_LINE#@#  This is in contrast with the second most prolific annotator who had an average precision of 0.67 (based on 311 out of 500 files).  #@NEW_LINE#@#  

Acoustic_testing_datasets_and_evaluation  #@NEW_LINE#@#  
To evaluate the performance of the detection algorithms, we created three different test datasets of approximately the same size (number and length of clips) (Fig 2A and 2B, Supplementary Information S1 Table).  #@NEW_LINE#@#  These datasets were chosen to represent three different realistic use cases commonly used for bat surveys and monitoring programmes and included data collected both along road-transects (resulting in noisier audio), and using static ultrasonic detectors.  #@NEW_LINE#@#  The test sets were as follows: (1) iBats Romania and Bulgariaaudio recorded from the same region, by the same individuals, with the same equipment, and sampling protocols as the training set, corresponding to 161 sampling events of 81 different transect routes; (2) iBats UKaudio recorded from a different region (corresponding to data from 176 sampling events of 111 different transects recorded between 20052011 in the United Kingdom, chosen randomly), by different individuals, using the same equipment type, and identical sampling protocols as part of the iBats programme [7] as the training set; and (3) Norfolk Bat Surveyaudio recorded from a different region (Norfolk, UK), by different individuals, using different equipment types (SM2BAT+ Song Meter, Wildlife Acoustics) and different protocols (static devices from random sampling locations) as part of the Norfolk Bat Survey [9] in 2015.  #@NEW_LINE#@#  These data corresponded to 381 sampling events from 246 static recording locations (1km2 grid cells), randomly chosen.  #@NEW_LINE#@#  The start times of the search-phase echolocation calls in these three test sets were manually extracted.  #@NEW_LINE#@#  For ambiguous calls, we consulted two experts, each with over 10 years of experience with bat acoustics.  #@NEW_LINE#@#  
As these data contained a significantly greater proportion of negative (non-bat calls) as compared to positive examples (bat calls), standard error metrics used for classification such as overall accuracy were not suitable for evaluating detection.  #@NEW_LINE#@#  Instead, we report the interpolated average precision and recall of each method displayed as a precision-recall curve [42].  #@NEW_LINE#@#  Precision was calculated as the number of true positives divided by the sum of both true and false positives.  #@NEW_LINE#@#  We consider a detection to be a true positive if it occurred within 10ms of the expert annotated start time of the search-phase echolocation call.  #@NEW_LINE#@#  Recall was measured as the overall fraction of calls that were present in the audio that were correctly detected.  #@NEW_LINE#@#  Curves were obtained by thresholding the detection probabilities from zero to one and recording the precision and recall at each threshold.  #@NEW_LINE#@#  Algorithms that did not produce a continuous output were represented as a single point on the precision-recall curves.  #@NEW_LINE#@#  We also report recall at 0.95 precision, a metric that measures the fraction of calls that were detected while accepting a false positive rate of 5%.  #@NEW_LINE#@#  Thus a detection algorithm gets a score of zero if it was not capable of retrieving any calls with a precision greater than 0.95.  #@NEW_LINE#@#  
We compared the performance of both BatDetect CNNs to three existing closed-source commercial detection systems: (1) SonoBat (version 3.1.7p) [43]; (2) SCANR version 1.7.7.  #@NEW_LINE#@#  [44]; and (3) Kaleidoscope (version 4.2.0 alpha4) [45].  #@NEW_LINE#@#  For SonoBat, calls were extracted in batch mode.  #@NEW_LINE#@#  We set a maximum of 100 calls per file (there are never more than 20 search-phase calls in a test file), and set acceptable call quality and skip calls below this quality parameters both to zero, and used an auto filter of 5KHz.  #@NEW_LINE#@#  For SCANR, we used standard settings as follows: setting minimum and maximum frequency cut off at 10 kHz and 125 kHz, respectively; minimum call duration at 0.5 ms; and minimum trigger level of 10 dB.  #@NEW_LINE#@#  We used Kaleidoscope in batch mode, setting frequency range to 15-120kHz, duration range to 0-500ms, maximum inter-syllable to 0ms, and minimum number of pulses to 0.  #@NEW_LINE#@#  We also compared two other detection algorithms that we implemented ourselves, which are representative of typical approaches used for detection in audio files and in other bat acoustic classification studies: (4) Segmentationan amplitude thresholding segmentation method [46], this is related to the approach of [47]; and (5) Random Foresta random forest-based classifier [48].  #@NEW_LINE#@#  Where relevant, the algorithms for (4) and (5) used the same processing steps as the BatDetect CNNs.  #@NEW_LINE#@#  For the Segmentation method, we thresholded the amplitude of the input spectrogram resulting in a binary segmentation.  #@NEW_LINE#@#  Regions that were greater than the threshold St, and bigger than size Sr, were considered as positive instances.  #@NEW_LINE#@#  We chose the values of St and Sr on the iBats (Romania and Bulgaria) test dataset that gave the best test results to quantify its best case performance.  #@NEW_LINE#@#  For the Random Forest algorithm, as opposed to extracting low dimensional audio features we instead we used the raw amplitude values from the gradient magnitude of the log magnitude spectrogram as a higher dimensional candidate feature set.  #@NEW_LINE#@#  This enabled the Random Forest to learn features that it deemed useful for detecting calls.  #@NEW_LINE#@#  We compared the total processing time for each of our own algorithms, and timings were calculated on a desktop with an Intel i7 processor, 32Gb of RAM, and a Nvidia GTX 1080 GPU.  #@NEW_LINE#@#  With the exception of the BatDetect CNNFULL, which used a GPU at test time, all the other algorithms were run on the CPU.  #@NEW_LINE#@#  

Ecological_monitoring_application  #@NEW_LINE#@#  
To demonstrate the performance of our method in a large-scale ecological monitoring application, we compared the number of bat search-phase echolocation calls found using our BatDetect CNNFAST algorithm to those produced from a commonly used commercial package using SonoBat (version 3.1.7p) [43] as a baseline, using monitoring data collected in iBats programme in Jersey, UK from 20112015.  #@NEW_LINE#@#  Audio data was collected twice yearly (July and August) from 11 road-transect routes of approximately 40km by volunteers using the iBats protocols (Supplementary Information, Supplementary Methods), corresponding to 5.7 days of continuous TE audio over five years (or 13.75 hours of real-time data).  #@NEW_LINE#@#  For the BatDetect CNNFAST analysis, we ran the pipeline as described above, using a conservative probabilistic threshold of 0.90 (so as to only include high precision predictions).  #@NEW_LINE#@#  Computational analysis timings for the CNNFAST for this dataset were calculated as before.  #@NEW_LINE#@#  For the comparison to SonoBat, we used the results from an existing real-world analysis in a recent monitoring report [49], where the audio files were first split into 1 min recordings, and then SonoBat was used to detect search-phase calls and to fit a frequency-time trend line to the shape of the call [49].  #@NEW_LINE#@#  All fitted lines were visually inspected and calls where the fitted line included background noise or echoes, were rejected.  #@NEW_LINE#@#  Typically, monitoring analyses group individual calls into sequences (a bat pass) before analysis.  #@NEW_LINE#@#  To replicate that here in both analyses, individual calls were assumed to be part of the same call sequence (bat pass) if they occurred within the same 3.84s sound clip and if the sequence continued into subsequent sound clips.  #@NEW_LINE#@#  We compared number of bat calls and passes detected per transect sampling event across the two analyses methods using generalized linear mixed models (GLMM) using lme4 [50] in R v. 3.3.3 [51] in order to control for the spatial and temporal non-independence of our survey data (Poisson GLMM including analysis method as a fixed effect and sampling event, transect route and date as random effects).  #@NEW_LINE#@#  


Results  #@NEW_LINE#@#  
Acoustic_detection_performance  #@NEW_LINE#@#  
Both versions of our BatDetect CNN algorithm outperformed all other algorithms and commercial systems tested, with consistently higher average precision scores and recall rates across the three different test datasets (Table 1, Fig 3A3C).  #@NEW_LINE#@#  In particular, the CNNs detected a substantially higher proportion of search-phase calls at 0.95 precision (maximum 5% false positives) (Table 1).  #@NEW_LINE#@#  All the other algorithms underestimated the number of search-phase echolocation calls in each dataset, except Segmentation, which produced high recall rates but with low precision (a high number of false positives).  #@NEW_LINE#@#  The CNNs relative improvement compared to other methods was higher on the road transect datasets (iBats Romania & Bulgaria; iBats UK; Table 1, Fig 3A and 3B).  #@NEW_LINE#@#  Overall the performance of CNNFAST was slightly worse than the larger CNNFULL across all test datasets, with the exception of improved recall at 0.95 precision in the static Norfolk Bat Survey dataset (Fig 3C, Table 1).  #@NEW_LINE#@#  Precision scores for all commercial systems (SonoBat, SCANR and Kaleidoscope) were reasonably good across all test datasets ( greater than 0.7) (Fig 3A3C).  #@NEW_LINE#@#  However, this was at the expense of recall rates, which were consistently lower than for the CNNs and Random Forest, where the maximum recall rates were 4460% of known calls detected (Fig 3C).  #@NEW_LINE#@#  The recall rates fell to a maximum of 25% of known calls for the road transect datasets (Fig 3A and 3B).  #@NEW_LINE#@#  
The Random Forest baseline performed significantly better than the commercial systems on the two challenging roadside recorded datasets (Fig 3A and 3B).  #@NEW_LINE#@#  This is a result of the training data and the underlying power of the model.  #@NEW_LINE#@#  However, unlike our CNNs, the simple tree based model is limited in the complexity of the representations it can learn, which results in worse performance.  #@NEW_LINE#@#  For the static Norfolk Bat Survey its performance more closely matches that of SonoBat, but with improved recall.  #@NEW_LINE#@#  
CNNFULL, CNNFAST, Random Forest, and the Segmentation algorithms took 53, 9.5, 11, and 17 seconds respectively, to run the full detection pipeline on the 3.2 minutes of full spectrum iBats Romania and Bulgaria test dataset.  #@NEW_LINE#@#  Compared to CNNFULL there was therefore a significant decrease in the time required to perform detection using CNNFAST, which was also the fastest of our methods overall.  #@NEW_LINE#@#  Notably, close to 50% of the CNN runtime was spent generating the spectrograms for detection, making this the most computationally expensive stage in the pipeline.  #@NEW_LINE#@#  

Ecological_monitoring_application_results  #@NEW_LINE#@#  
Our BatDetect CNNFAST algorithm detected a significantly higher number of bat echolocation search-phase calls per transect sampling event, across 5 years of road transect data from iBats Jersey, compared to using SonoBat (CNNFAST mean = 107.69, sd = 48.01; SonoBat mean = 64.95, sd = 28.53, Poisson GLMM including sampling event, transect route and date as random effects pless_than2e-16, n = 216) (Fig 4, Supplementary Information S2 Table).  #@NEW_LINE#@#  The differences between the two methods for bat passes was much smaller per sampling event, although CNNFAST still detected significantly more passes per transect recording (CNNFAST mean = 29.57, sd = 11.26; SonoBat mean = 27.27, sd = 10.85; Poisson GLMM including sampling event, transect route and date as random effects p = 0.00143, n = 216) (Fig 4, Supplementary Information S2 Table).  #@NEW_LINE#@#  Running only on the CPU, the CNNFAST algorithm took 24 seconds to process one hour of time-expanded audio.  #@NEW_LINE#@#  


Discussion  #@NEW_LINE#@#  
The BatDetect deep learning algorithms show a higher detection performance (average precision and recall) for search-phase echolocation calls with the test sets, when compared to other existing algorithms and commercial systems.  #@NEW_LINE#@#  In particular, our algorithms were better at detecting calls in road-transect data, which tend to contain noisier recordings, suggesting that these are extremely useful tools for measuring bat abundance and occurrence in such datasets.  #@NEW_LINE#@#  Road-transect acoustic monitoring is a useful technique to assess bat populations over large areas and programmes have now been established by government and non-government agencies in many different countries [e.g., 7, 52, 5355].  #@NEW_LINE#@#  Noisy sound environments are also likely to be a problem for other acoustic bat monitoring programmes.  #@NEW_LINE#@#  For example, with the falling cost and wider availability of full-spectrum audio equipment, the range of environments being acoustically monitored is increasing, including noisy urban situations [56, 57].  #@NEW_LINE#@#  Individual bats further from the microphone are less likely to be detected as their calls are fainter, and high ambient noise levels increase call masking and decrease call detectability.  #@NEW_LINE#@#  Additionally, a growth in open-source sensor equipment for bat acoustics using very cheap MEMs microphones [58] may also require algorithms able to detect bats in lower quality recordings, which may have a lower signal to noise ratio or a reduced call band-width due to frequency-dependent loss.  #@NEW_LINE#@#  Our open-source, well documented algorithms enable biases and errors to be directly incorporated into any acoustic analysis of bat populations and dynamics (e.g.  #@NEW_LINE#@#  occupancy models [e.g., 23].  #@NEW_LINE#@#  The detections with BatDetect can be directly used as input for population monitoring programmes when species identification is difficult such as the tropics, or to other CNN systems to determine bat species identity when sound libraries are available.  #@NEW_LINE#@#  
Our result that deep learning networks consistently outperformed other baselines, is consistent with the suggestion that CNNs offer substantially improved performance over other supervised learning methods for acoustic signal classification [39].  #@NEW_LINE#@#  The major improvement of both CNNs over Random Forest and the three commercial systems was in terms of recall, i.e.  #@NEW_LINE#@#  increasing the proportion of detected bat calls in the test datasets.  #@NEW_LINE#@#  Although the precision of the commercial systems was often relatively high, the CNNs were able to detect much fainter and partially noise-masked bat calls that were missed by the other methods, with fewer false positives, and very quickly, particularly with CNNFAST.  #@NEW_LINE#@#  Previous applications of deep learning networks to bioacoustic and environmental sound recognition have used small and high-quality datasets [e.g., 35, 39].  #@NEW_LINE#@#  However, our results show that, provided they are trained with suitably large and varied training data, deep learning networks have good potential for applied use in real-world heterogeneous datasets that are characteristic of acoustic wildlife monitoring (involving considerable variability in both environmental noise and distance of animal from sensor).  #@NEW_LINE#@#  Our comparison of CNNFULL and CNNFAST detectors was favourable, although CNNFAST had a slightly poorer performance showing a trade-off between speed and accuracy.  #@NEW_LINE#@#  This suggests that CNNFAST could potentially be adapted to work well with on-board low power devices (e.g.  #@NEW_LINE#@#  Intels Edison device) to deliver real-time detections.  #@NEW_LINE#@#  Avoiding the spectrogram generation stage entirely and using the raw audio samples as input [59], could also speed up performance of the system in the future, as currently over 50% of the CNN test time is taken up by computing spectrograms.  #@NEW_LINE#@#  
While our results have been validated on European bats, no species or region-specific knowledge, or particular acoustic sensor system is directly encoded into our system, making it possible to easily generalise to other systems (e.g.  #@NEW_LINE#@#  frequency division recordings), regions and species with additional training data.  #@NEW_LINE#@#  Despite this flexibility, this version of our deep network may be currently biased towards common species found along roads, although the algorithms did perform well on static recordings on a range of common and rare species in a range of habitats in the Norfolk Bat Survey [9].  #@NEW_LINE#@#  Nevertheless, in future, extending the training dataset to include annotated bat calls from verified species-call databases to increase geographic and taxonomic coverage, will further improve the generality of our detection tool.  #@NEW_LINE#@#  Other improvements to the CNN detectors could also be made to lessen taxonomic bias.  #@NEW_LINE#@#  For example, some bat species have search phase calls longer than the fixed input time window of 23ms of both CNNs (e.g.  #@NEW_LINE#@#  horseshoe bats).  #@NEW_LINE#@#  This may limit our ability currently to detect species with these types of calls.  #@NEW_LINE#@#  One future approach would be to resize the input window [33], thus discarding some temporal information, or to use some form of recurrent neural network such as a Long Short-Term Memory (LSTM) [60] that can take a variable length sequence as input.  #@NEW_LINE#@#  There are many more unused annotations in the Bat Detective dataset that could potentially increase our training set size.  #@NEW_LINE#@#  However, we found some variability in the quality of the citizen science user annotations, as in other studies [61].  #@NEW_LINE#@#  To make best use of these annotations, we need user models for understanding which annotations and users are reliable [62, 63].  #@NEW_LINE#@#  The Bat Detective dataset also includes annotations of particular acoustic behaviours (feeding buzzes and social calls), which in future can be used to train detection algorithms for different acoustic behaviours [e.g., 64].  #@NEW_LINE#@#  
Our evaluation on large-scale ecological monitoring data from Jersey [49], demonstrated that our open-source BatDetect CNNFAST pipeline performs as well or better (controlling for spatial and temporal non-independence) compared with an existing widely-used commercial system (SonoBat) that had been manually filtered (false positives were removed).  #@NEW_LINE#@#  Here we assume that the manually filtered data represents the ground truth, although it may slightly underrepresent the true number of calls due to missing detections on the part of SonoBat.  #@NEW_LINE#@#  Interestingly, although the CNNFAST consistently detected more of the faint and partially-masked calls, most bat passes are likely to still contain at least one call that is clearly-recorded enough to be detected by SonoBat, meaning that the total number of detected bat passes is similar across the two methods.  #@NEW_LINE#@#  No manual filtering is performed for CNNFAST, but the increase in detected calls mirrors the results observed in Fig 3 at high thresholds (i.e.  #@NEW_LINE#@#  the left of the curves), where both CNNs detected 1020% more calls than SonoBat on the related driving transect based test sets.  #@NEW_LINE#@#  Our system results in a large reduction processing timeseveral minutes for our automatic approach compared to several days split between automatic processing and manual filtering as reported by the authors of [49].  #@NEW_LINE#@#  Specifically, it takes CNNFAST under 10 seconds to process the 500 files in the iBats Romania and Bulgaria test set compared to 30 minutes for SonoBat in batch mode.  #@NEW_LINE#@#  This increase in performance both in terms of speed and accuracy is crucial for future large scale monitoring programmes.  #@NEW_LINE#@#  
The results in our monitoring application raises an interesting questionwhat is the value of the additional detected calls?  #@NEW_LINE#@#  Fig 4 shows a large increase in the number of detected calls and a slight increase in the number of detected bat passes.  #@NEW_LINE#@#  It may be the case that our current heuristic for merging calls into passes is too aggressive and as a result under reports the true number of bats when there were multiple calling at the same time.  #@NEW_LINE#@#  Further improvements to our system may come from a better understanding of the patterns of search-phase calls within sequences [65].  #@NEW_LINE#@#  Instead of the existing heuristic we would ideally also be able to learn the relationship between individual calls and passes from labelled training data.  #@NEW_LINE#@#  
The current generation of algorithms for bat species classification that are based on extracting simple audio features may perhaps not be best suited to make use of the extra calls we detect.  #@NEW_LINE#@#  However, when large collections of diverse species data become available only relatively minor architectural changes will be required to our detection pipeline to adapt it for species classification (e.g.  #@NEW_LINE#@#  changing the final layer of our CNNs).  #@NEW_LINE#@#  As we have already observed for detection, with enough data, representation learning based approaches can also be applied to the problem of species classification with the promise of large increases in accuracy.  #@NEW_LINE#@#  These extra calls will be invaluable to create more powerful models, enabling them to perform accurately in diverse and challenging real world situations.  #@NEW_LINE#@#  For some noisy and faint bat calls it may always be difficult to identify them to the species level, and as a result a coarser taxonomic prediction may have to suffice.  #@NEW_LINE#@#  
Our BatDetect search-phase bat call detector significantly outperforms existing methods for localising the position of bat search-phase calls, particularly in noisy audio data.  #@NEW_LINE#@#  It could be combined with automatic bat species classification tools to scale up the monitoring of bat populations over large geographic regions.  #@NEW_LINE#@#  In addition to making our system available open source, we also provide three expertly annotated test sets that can be used to benchmark future detection algorithms.  #@NEW_LINE#@#  

Data_reporting  #@NEW_LINE#@#  
All training and test data, including user and expert annotations, along with the code to train and evaluate our detection algorithms are available on our GitHub page (https://github.com/macaodha/batdetect).  #@NEW_LINE#@#  

Supporting_information  #@NEW_LINE#@#  
S1_Text_Supplementary_methods  #@NEW_LINE#@#  
Description of the CNN architectures, training details, and information about how the training data was collected.  #@NEW_LINE#@#  
https://doi.org/10.1371/journal.pcbi.1005995.s001  #@NEW_LINE#@#  
(PDF)  #@NEW_LINE#@#  

S1_Fig_CNNFAST_network_architecture_description  #@NEW_LINE#@#  
The CNNFAST network consists of two convolution layers (Conv1 and Conv2), with 16 filters each (shown in yellow, with the filter size shown inset).  #@NEW_LINE#@#  Both convolution layers are followed by a max pooling layer (Max Pool1 and Max Pool2), and the network ends with a fully connected layer with 64 units (Fully Connect).  #@NEW_LINE#@#  CNNFAST computes feature maps (shown as white boxes) across the entire input spectrogram, resulting in less computation and a much faster run time.  #@NEW_LINE#@#  The fully connected layer is also evaluated as a convolution.  #@NEW_LINE#@#  The output of the detector is a probability vector (shown in green) whose length is one quarter times the width of the input spectrogram.  #@NEW_LINE#@#  The numbers below each layer indicate the height, weight, and depth of the corresponding layer.  #@NEW_LINE#@#  
https://doi.org/10.1371/journal.pcbi.1005995.s002  #@NEW_LINE#@#  
(TIF)  #@NEW_LINE#@#  

S2_Fig_Spectrogram_annotation_interface_from_Bat_Detective  #@NEW_LINE#@#  
Boxes represent example user annotations of sounds in a spectrogram of a 3840ms sound clip, showing annotations of two sequences of search-phase echolocation bat calls (blue boxes), and an annotation of an insect call (yellow box).  #@NEW_LINE#@#  
https://doi.org/10.1371/journal.pcbi.1005995.s003  #@NEW_LINE#@#  
(TIF)  #@NEW_LINE#@#  

S3_Fig_Example_search-phase_bat_echolocation_calls_from_iBats_Romania_&_Bulgaria_training_dataset  #@NEW_LINE#@#  
Each example is represented as a spectrogram of duration 23 milliseconds and frequency range from 5115 kHz using the same FFT parameters as the main paper, and contains examples of different search-phase echolocation call type, but also a wide variety of background non-bat biotic, abiotic and anthropogenic sounds.  #@NEW_LINE#@#  
https://doi.org/10.1371/journal.pcbi.1005995.s004  #@NEW_LINE#@#  
(TIF)  #@NEW_LINE#@#  

S1_Table_Description_of_BatDetect_CNNs_test_datasets  #@NEW_LINE#@#  
TE represents time-expansion recordings (x10); RT real-time recordings.  #@NEW_LINE#@#  Note that the length of the clips is approximately comparable for both the iBats and the Norfolk Bat Survey data as the total iBats clip length of 3.84s corresponds to 320ms of ultrasonic sound slowed down ten times (3.2s) and buffered by silence on either side.  #@NEW_LINE#@#  
https://doi.org/10.1371/journal.pcbi.1005995.s005  #@NEW_LINE#@#  
(PDF)  #@NEW_LINE#@#  

S2_Table_Full_details_of_the_Poisson_Generalised_Linear_Mixed_Model_(GLMM)_used_to_model_bat_detections_(calls_and_passes)_for_two_acoustic_analytical_systems  #@NEW_LINE#@#  
 represents slope, Std standard deviation, Z Z-value, p probability.  #@NEW_LINE#@#  Analytical systems compared were SonoBat (version 3.1.7p) [14] and BatDetect CNNFAST, using a 0.9 probability threshold.  #@NEW_LINE#@#  Data from using acoustic monitoring data collected from Jersey, UK between 20112015.  #@NEW_LINE#@#  See main text for definition of a bat pass.  #@NEW_LINE#@#  GLMMs were fitted using lme4 [15] with model formula: detections ~ analytical_method + (1|sampling_event) + (1|transect) + (1|date).  #@NEW_LINE#@#  
https://doi.org/10.1371/journal.pcbi.1005995.s006  #@NEW_LINE#@#  
(PDF)  #@NEW_LINE#@#  

S1_Video_Overview_of_our_system__Bat_Detective_annotation_steps__and_sample_results  #@NEW_LINE#@#  
https://doi.org/10.1371/journal.pcbi.1005995.s007  #@NEW_LINE#@#  
(MP4)  #@NEW_LINE#@#  


Acknowledgments  #@NEW_LINE#@#  
We are enormously grateful for the efforts and enthusiasm of the amazing iBats and Bat Detective volunteers, for the many hours spent collecting data and providing valuable annotations.  #@NEW_LINE#@#  We would also like to thank Ian Agranat and Joe Szewczak for useful discussions and access to their systems.  #@NEW_LINE#@#  Finally, we would like to thank Zooniverse for setting up and hosting the Bat Detective project.  #@NEW_LINE#@#  

References  #@NEW_LINE#@#  



